<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2013-08-05T12:26:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>八月五日</title>
    <link rel="alternate" href="/blog/August05.html"/>
    <id>/blog/August05.html</id>
    <published>2013-08-05T12:26:00Z</published>
    <updated>2013-08-05T12:26:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;时间进入8月，天气依然闷热，但立秋将近，凉爽还会远吗？&lt;/p&gt;

&lt;h3 id="jquery"&gt;JQuery&lt;/h3&gt;
&lt;p&gt;JQuery几乎已经前端开发的标配了，大多数开发人员对JQuery的运用也已经驾轻就熟。但你是否知道，耳熟能详的bind、live、on几种事件绑定方式有何区别。请跟着成都的毕业生占红来一探究竟 &lt;a href="http://blog.csdn.net/sonlyf5020/article/details/9674099"&gt;.bind .live .on&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id="scala"&gt;Scala&lt;/h3&gt;
&lt;p&gt;Scala这门程序设计语言试图通过自己的努力打破面向对象程序设计和函数式编程的疆界，对习惯了面向对象程序设计的人，怎样一步步迈向函数式风格还是有些规律可循的。成都办公室有一个新来的腼腆大男孩李建，但他却对Scala有着自己的热情，让我们跟着他一起探究Scala的奥秘吧！ &lt;a href="http://1.jakimli.sinaapp.com/?p=10"&gt;Scala中的尾递归&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="reflection-in-c"&gt;Reflection in C&lt;/h3&gt;
&lt;p&gt;反射，让人又爱又恨。一种由于过于强大而禁止在日常开发中使用的技术，同时也是一种可以在消除重复这件事上走得更远的技术。让架构师又爱又恨的语言特性，听起来这就是典型的只许州官放火不许百姓点灯的技术：哪个架构师不用反射呢？可惜架构师往往还不得不禁止普通程序员使用反射，以免滥用造成无法收拾的混乱。危险而又迷人的强大技术，不会有哪个Geek控制的住自己的欲望不去了解它。那位少年，我看你筋骨奇特，这本北京办公室禚娴静女侠的《Reflection in C#》就送给你了，以后维护软件世界远离混沌的任务就交给你了，收下吧：&lt;a href="http://xianjing.github.io/blog/2013/05/07/reflection-in-c-sharp/"&gt;Reflection in C#&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="lisp"&gt;Lisp&lt;/h3&gt;
&lt;p&gt;很多人都知道西安办公室邱俊涛是JavaScript方面的专家，但你不知道，最近邱俊涛的努力方向在Lisp上。如何搭建一个Lisp开发环境，Lisp有哪些特性，以及Lisp让许多人痴迷不已的宏到底是怎样的，请听邱俊涛一一道来：&lt;a href="http://icodeit.org/2013/06/setup-lisp-development-env-on-mac/"&gt;在Mac下搭建Common Lisp开发环境&lt;/a&gt; &lt;a href="http://icodeit.org/2013/06/common-lisp-basic/"&gt;Common Lisp 里的一些基本概念&lt;/a&gt; &lt;a href="http://icodeit.org/2013/06/macro-in-common-lisp/"&gt;Common Lisp中的宏(Macro)&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="java-"&gt;Java 新知识&lt;/h3&gt;
&lt;p&gt;如果你两耳不闻窗外事十年，出山之后，你会发现自己的Java开发知识大多还是适用的，找一份Java开发的工作还是可能的。但是，你要知道Java世界也在变化，没有丝毫停歇，所以，不要抱残守缺，拥着十年前的Java开发知识不放吧！Java开发还在前进，听听成都办公室的刘先宁给你介绍一下Java新知识：&lt;a href="http://ningandjiao.iteye.com/blog/1905882"&gt;进击的Java开发&lt;/a&gt;&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>七月二十九日</title>
    <link rel="alternate" href="/blog/July29.html"/>
    <id>/blog/July29.html</id>
    <published>2013-07-31T14:29:00Z</published>
    <updated>2013-07-31T14:29:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;上周我们稍做休息，但并不妨碍ThoughtWorker们发出好声音，本周，我们继续前行。&lt;/p&gt;

&lt;h3 id="section"&gt;函数式编程&lt;/h3&gt;
&lt;p&gt;如果给追求卓越的软件开发者推荐一本书，且只能推荐一本，Neal Ford的《The Productive Programmer》（卓有成效的程序员）当之无愧。Neal Ford是ThoughtWorks公司里的P2的卓越代表之一，这次我们共同品味Neal Ford为解读的函数式编程： &lt;a href="http://www.infoq.com/cn/news/2013/07/functional-programming"&gt;函数式编程为何越来越受到重视&lt;/a&gt;  &lt;a href="http://www.ibm.com/developerworks/cn/java/j-ft20/"&gt;函数式思维&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="moco"&gt;Moco背后的故事&lt;/h3&gt;
&lt;p&gt;关于P2，最近有一个好消息是，郑晔写的Moco拿到2013年的Duke选择奖，Moco是救集成于水深火热的一个框架/工具。让我们一起跟着InfoQ的访谈一起了解一下 &lt;a href="http://www.infoq.com/cn/news/2013/07/zhengye-on-moco"&gt;Moco背后的故事&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id="section-1"&gt;代码腐化和救赎&lt;/h3&gt;
&lt;p&gt;代码的腐化少有是一蹴而就的，多半是每个人改动一点点累积出来的。如果我们没有良好的嗅觉，无法闻到坏味道，那便是滑向腐坏深渊的开始。我们不妨追随着成都办公室的张逸，一个工作超过十五年的文艺“老人家”，一起用一个例子看看&lt;a href="http://agiledon.github.io/blog/2013/07/05/corrupt-code/"&gt;代码腐化和救赎&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id="section-2"&gt;遗留代码&lt;/h3&gt;
&lt;p&gt;遗留代码到处都有，不管它来自十年前，还是昨天写的，只要有腐朽的味道，它就是遗留代码。遗留代码不可怕，我们总要有些办法对付它。我们来看看成都办公室的贺思聪对一段&lt;a href="http://blog.april1985.com/index.php/2013/07/yi_ge_yi_liu_dai_ma_de_zhong_gou_de_tao_lun/"&gt;遗留代码的讨论&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id="git-"&gt;git 小技巧&lt;/h3&gt;
&lt;p&gt;想没想过这样的情形，我们在别人的机器上或是结对的机器上提交代码，却希望把自己的名字放到提交信息上。西安办公室的马博文用一个&lt;a href="http://iambowen.github.io/git/2013/06/19/reset-commit-author/"&gt;git小技巧&lt;/a&gt;修改提交的作者信息。&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>七月十五日</title>
    <link rel="alternate" href="/blog/July15.html"/>
    <id>/blog/July15.html</id>
    <published>2013-07-15T12:33:00Z</published>
    <updated>2013-07-15T12:33:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;又一季的中国好声音开唱了，希望我们的The Voice Of ThoughtWorkers也能越来越精彩。&lt;/p&gt;

&lt;h3 id="section"&gt;从持续设计到持续交付：完善循环&lt;/h3&gt;
&lt;p&gt;在你脑中，软件开发意味着什么？如果只是写代码，只能说你是个目光短浅的程序员；如果有需求、设计、编码、测试、维护，那说明你在团队里干过，但依然思路有限；现在说起软件开发，要从一个构思开始，一直到发布上线，验证构思的可行性，并不断进行这样的循环，这里面包含的东西太多了。为了让大家打开眼界，我们的CTO Rebecca Parsons写了篇文章&lt;a href="http://www.infoq.com/cn/articles/continuous-delivery-continuous-design"&gt;《从持续设计到持续交付：完善循环》&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id="linux"&gt;Linux终端中使用上一命令减少键盘输入&lt;/h3&gt;
&lt;p&gt;在成都，郑大晔校有一个著名的复读生，他读了两年郑大晔校，因为他提前一年应聘ThoughtWorks，居然还成功了。他的blog上有一些有趣的内容，如今他终于入职了，我们终于可以光明正大地把他的内容放到这里了。他叫小白，因为长地很白，哦，其实他叫文竞成，请看&lt;a href="http://blog.csdn.net/kiwi_coder/article/details/9229913"&gt;《Linux终端中使用上一命令减少键盘输入》&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="vagrant"&gt;Vagrant初窥&lt;/h3&gt;
&lt;p&gt;ThoughtWorks有个人，曾经在自我介绍时，当着全办公室的人面做了首诗，于是，诗人的名号也就传了开来。当然，后来人们知道，他的技术能力也是很不错的，在对外方面，翻译、演讲的事也做了很多。如今，他的更多注意力放在了虚拟化和云上，我们不妨领略一下金明的《Vagrant初窥》（&lt;a href="http://mingjin.thoughtworkers.org/?p=155"&gt;一&lt;/a&gt;）、（&lt;a href="http://mingjin.thoughtworkers.org/?p=170"&gt;二&lt;/a&gt;）、&lt;a href="http://mingjin.thoughtworkers.org/?p=176"&gt;OVA（VMX）化Vagrant box&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="some-tricky-ways-to-calculate-integer-in-javascript"&gt;Some Tricky Ways to Calculate Integer in Javascript&lt;/h3&gt;
&lt;p&gt;北京办公室有个长发飘飘的男人颇有geek范，在前不久举办的ThoughtWorks内部技术大赛上，他拿出了两个颇有新意的小东西参赛。让我们看看这个文迪用&lt;a href="http://timnew.github.io/blog/2013/02/24/some-tricky-ways-to-calculate-integer-in-javascript/"&gt;《Some Tricky Ways to Calculate Integer in Javascript》&lt;/a&gt;：&lt;/p&gt;

&lt;h3 id="evernote-with-orgmode"&gt;Evernote With Orgmode&lt;/h3&gt;
&lt;p&gt;这个世界上有三种程序员，玩Vi的，玩Emacs的，你想过怎么把年代久远的Emacs和新时代利器Evernote放在一起怎么玩吗？那就看看看看&lt;a href="http://oyanglul.us/blog/2013/06/25/evernote-with-orgmode/"&gt;《Evernote With Orgmode》&lt;/a&gt;，它来自西安办公室的毕业生Geek欧阳继超：&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>七月八日</title>
    <link rel="alternate" href="/blog/July08.html"/>
    <id>/blog/July08.html</id>
    <published>2013-07-08T14:13:00Z</published>
    <updated>2013-07-08T14:13:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h3 id="gradlejava"&gt;Gradle在大型Java项目上的应用&lt;/h3&gt;
&lt;p&gt;在之前的分享中，我们介绍过Gradle的基本用法，还是那句话，Java程序员如果用Maven，你就Out了。如果不想让人嘲笑，赶紧投入到新构建工具的阵营来吧！这次给大家带来一些高级用法的是何海洋，他用一篇&lt;a href="http://www.infoq.com/cn/articles/Gradle-application-in-large-Java-projects"&gt;《Gradle在大型Java项目上的应用》&lt;/a&gt;证明了自己不仅仅是乒乓球大师，更是Java高手。&lt;/p&gt;

&lt;h3 id="lambda-"&gt;Lambda演算-编程语言算术操作实现&lt;/h3&gt;
&lt;p&gt;如今的程序设计里，lambda已经是非常常见的一种语法构造，君不见就连Java这种笨拙的程序设计语言也要在Java 8里增添对于lambda的支持。也许你也知道，lambda演算是整个函数式编程的基础，但你是否知道，lambda演算到底意味着什么呢？那我们就一起跟着成都办公室尤青松的文章&lt;a href="http://yqsqq.github.io/blog/2013/03/15/lambdayan-suan-bian-cheng-yu-yan-suan-zhu-cao-zuo-shi-xian/"&gt;《Lambda演算-编程语言算术操作实现》&lt;/a&gt;，体验一下真正的lambda演算，需要提示一下，这会很费脑子：&lt;/p&gt;

&lt;h3 id="section"&gt;使用功能开关更好地实现持续部署&lt;/h3&gt;
&lt;p&gt;如今的开发，周期越来越快，功能越来越多，如果还在用Feature Branch隔离不同的功能，那就有些土了，现在人家开发都用Feature Toggle。如果你还不知道Feature Toggle怎么做，不妨看看西安办公室崔立强的&lt;a href="http://www.infoq.com/cn/articles/function-switch-realize-better-continuous-implementations"&gt;《使用功能开关更好地实现持续部署》&lt;/a&gt;。顺便说一下，《ThoughtWorks文集2》里也有一章专门讲述Feature Toggle。&lt;/p&gt;

&lt;h3 id="java-8"&gt;Java 8预览&lt;/h3&gt;
&lt;p&gt;Java8即将面市了，他是一如既往的土呢，还是会换上些新潮的服饰呢？想不想知道那些年我们爱过的这门语言有什么新特性？不妨跟着我们北京办公室的才子——张振宇——提前体验一下Java 8，共赏新时代Java的序曲
&lt;a href="http://zyzhang.github.io/blog/2013/06/13/intellij-java8-compile-require-target-1-8"&gt;IntelliJ中Java8编译错误&lt;/a&gt; 
&lt;a href="http://zyzhang.github.io/blog/2013/06/13/java8previewdefaultmethod"&gt;Java 8 预览之Default Method&lt;/a&gt; 
&lt;a href="http://zyzhang.github.io/blog/2013/06/15/java8-preview-functional-interface"&gt;Java 8 预览之Functional Interface&lt;/a&gt; 
&lt;a href="http://zyzhang.github.io/blog/2013/06/15/java8-preview-method-reference"&gt;Java 8 预览之Method Reference&lt;/a&gt;：&lt;/p&gt;

&lt;h3 id="chocolatey-"&gt;Chocolatey, 我爱你&lt;/h3&gt;
&lt;p&gt;在程序员的眼里，一切都要尽可能自动化，这也是Windows之前如此不受待见的重要原因。Windows程序员别提多羡慕其它世界程序员用包管理器安装软件的过程了。好在世界有了一些改变，有个Chocolatey的东西出现了。北京办公室的韩锴高声疾呼&lt;a href="http://isaachan.github.io/blog/2013/02/07/chocolatey-i-love-you/"&gt;《Chocolatey, 我爱你》&lt;/a&gt;，让我们共同赏析这份炽烈的爱：&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>七月一日</title>
    <link rel="alternate" href="/blog/July01.html"/>
    <id>/blog/July01.html</id>
    <published>2013-07-01T15:11:00Z</published>
    <updated>2013-07-01T15:11:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;时间来到2013年下半年，《The Voice Of ThoughtWorkers》也已经运行超过了一个月。
在这样一个历史阶段，我们终于实现了四个办公室同台演出，希望以后这样的场面可以经常出现！&lt;/p&gt;

&lt;h3 id="javascriptreplace"&gt;JavaScript函数replace揭秘&lt;/h3&gt;
&lt;p&gt;成都办公室里有个JavaScript粉，恨不得用JavaScript写所有的代码，虽然他不是专职的UI；也许，更多人知道因为他的民族，他是中国区的第一个藏族同胞；但他真正赢得大家尊敬的是他的技术能力。&lt;a href="http://www.cnblogs.com/whitewolf/archive/2013/03/14/2958720.html"&gt;《JavaScript函数replace揭秘》&lt;/a&gt;让我们得以初窥格荣扎西的技术功底：&lt;/p&gt;

&lt;h3 id="test-tips"&gt;2 Test Tips&lt;/h3&gt;
&lt;p&gt;西安办公室的张久坤为我们带来了&lt;a href="http://xuwugui.github.io/blog/2013/06/21/2-test-tips/"&gt;《2 Test Tips》&lt;/a&gt;，两个非常实用的小技巧，却很好地解决了在Java开发中常见的两个问题：使用Joda Time函数模拟当前时间，以及编写自己的Matcher。顺便说一下，如果你用的JUnit版本大于4.11，用FeatureMatcher定制Matcher会更容易：&lt;/p&gt;

&lt;h3 id="angularjs"&gt;AngularJS&lt;/h3&gt;
&lt;p&gt;用各种JavaScript库，通过各种方式找出想要修改的元素，然后应用一些脚本来动态化页面？或者使用前端的各种MVC框架，更好地组织庞大的JavaScript代码？何不尝试扩展HTML本身，使其更容易展现动态的内容呢！ 这就是AngularJS的设计初衷，北京办公室张霄翀分享了AngularJS的一些有趣的特性（比如scope，data-binding，service/provider/factory），轻击查看 
&lt;a href="http://hellobug.github.io/blog/angularjs-introduction/"&gt;感受篇&lt;/a&gt; 
&lt;a href="http://hellobug.github.io/blog/angularjs-scope/"&gt;Scope&lt;/a&gt; 
&lt;a href="http://hellobug.github.io/blog/angularjs-two-ways-binding/"&gt;View-Model双向绑定背后的故事&lt;/a&gt; 
&lt;a href="http://hellobug.github.io/blog/angularjs-providers/"&gt;伤不起的provider们&lt;/a&gt;：&lt;/p&gt;

&lt;h3 id="java"&gt;Java常见分布式协议比较系列&lt;/h3&gt;
&lt;p&gt;如果你们觉得只有追求新的技术才是Geek，那只能说你们，too young，too naive。所谓Geek就是把一件平淡至极的事情做到让人惊叹的地步。所以做为一个靠谱的Geek，必须要面对那些真实被使用的技术，哪怕它们很陈旧。有请北京办公室的张晓庆同学送上《Java常见分布式协议比较系列》，在这里你会看到&lt;a href="http://xiaoqing.me/2012/12/19/protocols-ejb/"&gt;EJB&lt;/a&gt;、&lt;a href="http://xiaoqing.me/2012/12/21/protocols-rmi/"&gt;RMI&lt;/a&gt;、&lt;a href="http://xiaoqing.me/2012/12/25/protocols-rpc/"&gt;RPC&lt;/a&gt;、&lt;a href="http://xiaoqing.me/2012/12/28/protocols-corba/"&gt;CORBA&lt;/a&gt;和&lt;a href="http://xiaoqing.me/2013/01/08/protocols-jms/"&gt;JMS&lt;/a&gt;等。&lt;/p&gt;

&lt;h3 id="scala"&gt;scala的类型系统居然可以解题&lt;/h3&gt;
&lt;p&gt;对于许多年轻的程序员而言，或许你错过了C++泛型初临之际的各种折腾，比如，用C++泛型参数求阶乘。但只要是内心有所追求的程序员，便无法停止对技术狂热，请看上海办公室李鹏的发现&lt;a href="http://freewind.me/blog/20130612/2153.html"&gt;《scala的类型系统居然可以解题》&lt;/a&gt;：&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>六月二十四日</title>
    <link rel="alternate" href="/blog/June24.html"/>
    <id>/blog/June24.html</id>
    <published>2013-06-24T15:52:00Z</published>
    <updated>2013-06-24T15:52:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;这次的成都推荐来自两个毕业生，准确地说，实习生，还没毕业。虽然他们的文字还略显稚嫩，但从中我们已经可以看到未来之星正在冉冉升起。&lt;/p&gt;

&lt;h3 id="moco"&gt;Moco使用心得分享&lt;/h3&gt;
&lt;p&gt;首先是赵峻伟，它写了一篇&lt;a href="http://toozhao.com/blog/2013/06/13/moco/"&gt;《Moco使用心得分享》&lt;/a&gt;，他所在的项目是第一将Moco应用于实践的商业项目，从中孵化出许多Moco的新用法，也探索出企业集成测试的新方式。我们不妨看看在峻伟眼中，Moco如何助力其开发企业开发的。&lt;/p&gt;

&lt;h3 id="expressjssocketio"&gt;让expressjs和socket.io分享同一个路由&lt;/h3&gt;
&lt;p&gt;另一个是郑泽楷，他算是一名特长生，特长是前端开发，所以，他的blog对前端开发相关的技术关注很多，而来自JavaScript世界的Node.js自然也纳入了他的兴趣范畴。&lt;a href="http://www.closure.pro/index.html#/article/51c2e064e742b80000000001"&gt;《让expressjs和socket.io分享同一个路由》&lt;/a&gt;让我们看到ThoughtWorker身上应有的那种爱折腾劲。&lt;/p&gt;

&lt;h3 id="gradle"&gt;Gradle基础教程&lt;/h3&gt;
&lt;p&gt;如果你在做一个Java项目，请问你的构建工具是什么？如果你的答案是Ant，只有一个字形容“土”，如果是Maven，那么恭喜你，你out了。君不见在新版技术雷达里，Maven已经On Hold了吗？也就是说，老项目不得已，新项目就别用了。那用什么呢？Gradle和Buildr是新时代的选择。西安办公室的王磊为我们提供了一个Gradle的基础教程(&lt;a href="http://wldandan.github.io/blog/2013/01/23/gradle-learning-one/"&gt;一&lt;/a&gt;,&lt;a href="http://wldandan.github.io/blog/2013/01/23/gradle-learning-two/"&gt;二&lt;/a&gt;,&lt;a href="http://wldandan.github.io/blog/2013/01/24/gradle-learning-three/"&gt;三&lt;/a&gt;,&lt;a href="http://wldandan.github.io/blog/2013/01/25/gradle-learning-four/"&gt;四&lt;/a&gt;)，帮助我们走上Gradle的康庄大道，从此告别恼人的XML！&lt;/p&gt;

&lt;h3 id="inside-coffeescript"&gt;Inside CoffeeScript&lt;/h3&gt;
&lt;p&gt;西安办公室的姜鹏是米糕产品团队的一员干将，要知道，以米糕的不安好心，他从开发团队里带走的都是些精明强干之辈。这里分享的是姜鹏对于CoffeeScript的理解，鉴于许多人都知道JavaScript的水有多深，有机会跳脱出来，换个方式写代码，你会如春风拂面搬清爽，话不多说，请看 &lt;a href="http://jiangpeng.info/blogs/2012/05/26/inside-coffeescript-1.html"&gt;Inside CoffeeScript: 语法强大&lt;/a&gt;, &lt;a href="http://jiangpeng.info/blogs/2012/05/26/inside-coffeescript-2.html"&gt;Inside CoffeeScript: 语法强壮&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id="groovy-beginner"&gt;Groovy Beginner&lt;/h3&gt;
&lt;p&gt;北京有一个被许多人奉为偶像的人，因为他从来都是言简意赅，直中要害。所以，他一旦发言，大家通常的选择，就是好好听着。他叫李光磊，他最近对Groovy有了兴趣，所以，我们有了一系列Groovy文章可以看，猛击查看：
&lt;a href="http://liguanglei.name/blogs/2013/06/05/groovy-beginner-collections-vs-linq-and-stl/"&gt;《Closure, ExpandoMetaClass, delegate, they don’t like each other?》&lt;/a&gt; 
&lt;a href="http://liguanglei.name/blogs/2013/06/05/groovy-beginner-collections-vs-linq-and-stl/"&gt;Collections (vs. LINQ and STL)&lt;/a&gt;
&lt;a href="http://liguanglei.name/blogs/2013/06/06/groovy-beginner-a-brief-summary/"&gt;A Brief Summary&lt;/a&gt;&lt;/p&gt;

</content>
  </entry>
</feed>
