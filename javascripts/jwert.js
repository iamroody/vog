/*
 * jwerty - Awesome handling of keyboard events
 *
 * jwerty is a JS lib which allows you to bind, fire and assert key combination
 * strings against elements and events. It normalises the poor std api into
 * something easy to use and clear.
 *
 * This code is licensed under the MIT
 * For the full license see: http://keithamus.mit-license.org/
 * For more information see: http://keithamus.github.com/jwerty
 *
 * @author Keith Cirkel ('keithamus') <jwerty@keithcirkel.co.uk>
 * @license http://keithamus.mit-license.org/
 * @copyright Copyright © 2011, Keith Cirkel
 *
 */
!function(e,t){function n(e,t){return null===e?"null"===t:void 0===e?"undefined"===t:e.is&&e instanceof u?"element"===t:Object.prototype.toString.call(e).toLowerCase().indexOf(t)>7}function r(e){var t,o,i,a,s,u,l,y,d;if(e instanceof r)return e;for(n(e,"array")||(e=String(e).replace(/\s/g,"").toLowerCase().match(/(?:\+,|[^,])+/g)),t=0,o=e.length;o>t;++t){for(n(e[t],"array")||(e[t]=String(e[t]).match(/(?:\+\/|[^\/])+/g)),u=[],i=e[t].length;i--;){for(l=e[t][i],s={jwertyCombo:String(l),shiftKey:!1,ctrlKey:!1,altKey:!1,metaKey:!1},n(l,"array")||(l=String(l).toLowerCase().match(/(?:(?:[^\+])+|\+\+|^\+$)/g)),a=l.length;a--;)"++"===l[a]&&(l[a]="+"),l[a]in f.mods?s[c[f.mods[l[a]]]]=!0:l[a]in f.keys?s.keyCode=f.keys[l[a]]:y=l[a].match(/^\[([^-]+\-?[^-]*)-([^-]+\-?[^-]*)\]$/);if(n(s.keyCode,"undefined"))if(y&&y[1]in f.keys&&y[2]in f.keys){for(y[2]=f.keys[y[2]],y[1]=f.keys[y[1]],d=y[1];d<y[2];++d)u.push({altKey:s.altKey,shiftKey:s.shiftKey,metaKey:s.metaKey,ctrlKey:s.ctrlKey,keyCode:d,jwertyCombo:String(l)});s.keyCode=d}else s.keyCode=0;u.push(s)}this[t]=u}return this.length=t,this}var o,i,a,s=e.document,u=e.jQuery||e.Zepto||e.ender||s,l="keydown";u===s?(o=function(e,t){return e?u.querySelector(e,t||u):u},i=function(e,t){e.addEventListener(l,t,!1)},a=function(e,t){var n,r=s.createEvent("Event");r.initEvent(l,!0,!0);for(n in t)r[n]=t[n];return(e||u).dispatchEvent(r)}):(o=function(e,t){return u(e||s,t)},i=function(e,t){u(e).bind(l+".jwerty",t)},a=function(e,t){u(e||s).trigger(u.Event(l,t))});for(var c={16:"shiftKey",17:"ctrlKey",18:"altKey",91:"metaKey"},f={mods:{"⇧":16,shift:16,"⌃":17,ctrl:17,"⌥":18,alt:18,option:18,"⌘":91,meta:91,cmd:91,"super":91,win:91},keys:{"⌫":8,backspace:8,"⇥":9,"⇆":9,tab:9,"↩":13,"return":13,enter:13,"⌅":13,pause:19,"pause-break":19,"⇪":20,caps:20,"caps-lock":20,"⎋":27,escape:27,esc:27,space:32,"↖":33,pgup:33,"page-up":33,"↘":34,pgdown:34,"page-down":34,"⇟":35,end:35,"⇞":36,home:36,ins:45,insert:45,del:46,"delete":46,"←":37,left:37,"arrow-left":37,"↑":38,up:38,"arrow-up":38,"→":39,right:39,"arrow-right":39,"↓":40,down:40,"arrow-down":40,"*":106,star:106,asterisk:106,multiply:106,"+":107,plus:107,"-":109,subtract:109,"num-.":110,"num-period":110,"num-dot":110,"num-full-stop":110,"num-delete":110,";":186,semicolon:186,"=":187,equals:187,",":188,comma:188,".":190,period:190,"full-stop":190,"/":191,slash:191,"forward-slash":191,"`":192,tick:192,"back-quote":192,"[":219,"open-bracket":219,"\\":220,"back-slash":220,"]":221,"close-bracket":221,"'":222,quote:222,apostraphe:222}},y=47,d=0;++y<106;)f.keys[d]=y,f.keys["num-"+d]=y+48,++d;for(y=111,d=1;++y<136;)f.keys["f"+d]=y,++d;for(y=64;++y<91;)f.keys[String.fromCharCode(y).toLowerCase()]=y;var m=t.jwerty={event:function(e,t,o){if(n(t,"boolean")){var i=t;t=function(){return i}}e=new r(e);var a,s,u=0,l=e.length-1;return function(n){return(s=m.is(e,n,u))?l>u?(++u,void 0):(a=t.call(o||this,n,s),a===!1&&n.preventDefault(),u=0,void 0):(u=m.is(e,n)?1:0,void 0)}},is:function(e,t,n){e=new r(e),n=n||0,e=e[n],t=t.originalEvent||t;for(var o=e.length,i=!1;o--;){i=e[o].jwertyCombo;for(var a in e[o])"jwertyCombo"!==a&&t[a]!=e[o][a]&&(i=!1);if(i!==!1)return i}return i},key:function(t,r,a,s,u){var l=n(a,"element")||n(a,"string")?a:s,c=l===a?e:a,f=l===a?s:u;i(n(l,"element")?l:o(l,f),m.event(t,r,c))},fire:function(e,t,i,s){e=new r(e);var u=n(i,"number")?i:s;a(n(t,"element")?t:o(t,i),e[u||0][0])},KEYS:f}}(this,"undefined"!=typeof module&&module.exports?module.exports:this);